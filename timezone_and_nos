timezone questions

1...>
 
import java.time.*;
 
class Problem1 {
    public static void main(String[] args) {
        ZonedDateTime gmt = ZonedDateTime.now(ZoneId.of("GMT"));
        ZonedDateTime ist = ZonedDateTime.now(ZoneId.of("Asia/Kolkata"));
        ZonedDateTime pst = ZonedDateTime.now(ZoneId.of("America/Los_Angeles"));
 
        System.out.println("GMT: " + gmt);
        System.out.println("IST: " + ist);
        System.out.println("PST: " + pst);
    }
 }
 
2...>
 
 
 
import java.time.*;
 import java.util.*;
 
class Problem2 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter date (yyyy-MM-dd): ");
        String input = sc.nextLine();
        LocalDate date = LocalDate.parse(input);
 
        LocalDate result = date.plusDays(7).plusMonths(1).plusYears(2).minusWeeks(3);
 
        System.out.println("Final Date: " + result);
    }
 }
 
 
 
3...>
 
import java.time.*;
 import java.time.format.*;
 
class Problem3 {
    public static void main(String[] args) {
        LocalDate today = LocalDate.now();
 
        DateTimeFormatter f1 = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        DateTimeFormatter f2 = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        DateTimeFormatter f3 = DateTimeFormatter.ofPattern("EEE, MMM dd, yyyy");
 
        System.out.println("Format 1: " + today.format(f1));
        System.out.println("Format 2: " + today.format(f2));
        System.out.println("Format 3: " + today.format(f3));
    }
 }
 
 
 
4...>
 
import java.time.*;
 import java.util.*;
 
class Problem4 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter first date (yyyy-MM-dd): ");
        LocalDate d1 = LocalDate.parse(sc.nextLine());
 
        System.out.print("Enter second date (yyyy-MM-dd): ");
        LocalDate d2 = LocalDate.parse(sc.nextLine());
 
        if (d1.isBefore(d2)) System.out.println("First date is before second date");
        else if (d1.isAfter(d2)) System.out.println("First date is after second date");
        else System.out.println("Both dates are equal");
    }
 }


number questions

1...> numvber guess
 
import java.util.*;
 
class NumberGuessingGame {
    static int generateGuess(int low, int high) {
        return low + (int)(Math.random() * (high - low + 1));
    }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int low = 1, high = 100;
        String feedback = "";
 
        System.out.println("Think of a number between 1 and 100.");
 
        while (!feedback.equals("correct")) {
            int guess = generateGuess(low, high);
            System.out.println("Computer guesses: " + guess);
            System.out.print("Enter feedback (high/low/correct): ");
            feedback = sc.nextLine();
 
            if (feedback.equals("high")) high = guess - 1;
            else if (feedback.equals("low")) low = guess + 1;
        }
 
        System.out.println("The computer guessed your number!");
    }
 }
 
 
 
2...>max of three nos.
 
import java.util.*;
 
class MaxOfThree {
    static int findMax(int a, int b, int c) {
        return Math.max(a, Math.max(b, c));
    }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter three numbers: ");
        int a = sc.nextInt(), b = sc.nextInt(), c = sc.nextInt();
 
        int max = findMax(a, b, c);
        System.out.println("Maximum: " + max);
    }
 }
 
 
 
3...>
 
import java.util.*;
 
class PrimeChecker {
    static boolean isPrime(int n) {
        if (n <= 1) return false;
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) return false;
        }
        return true;
    }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter a number: ");
        int n = sc.nextInt();
 
        if (isPrime(n)) System.out.println(n + " is Prime");
        else System.out.println(n + " is Not Prime");
    }
 }
 
4...>
 
import java.util.*;
 
class Fibonacci {
    static void generateFibonacci(int terms) {
        int a = 0, b = 1;
        for (int i = 0; i < terms; i++) {
            System.out.print(a + " ");
            int next = a + b;
            a = b;
            b = next;
        }
    }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter number of terms: ");
        int terms = sc.nextInt();
 
        generateFibonacci(terms);
    }
 }
 
 
 
5...>
 
import java.util.*;
 
class Palindrome {
    static boolean isPalindrome(String str) {
        int i = 0, j = str.length() - 1;
        while (i < j) {
            if (str.charAt(i) != str.charAt(j)) return false;
            i++;
            j--;
        }
        return true;
    }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter a string: ");
        String str = sc.nextLine();
 
        if (isPalindrome(str)) System.out.println("Palindrome");
        else System.out.println("Not Palindrome");
    }
 }
 
 
 
 
 
6...>
 
import java.util.*;
 
class Factorial {
    static long factorial(int n) {
        if (n == 0) return 1;
        return n * factorial(n - 1);
    }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter a number: ");
        int n = sc.nextInt();
 
        System.out.println("Factorial: " + factorial(n));
    }
 }
 
 
 
7...>
 
import java.util.*;
 
class GcdLcm {
    static int gcd(int a, int b) {
        while (b != 0) {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }
 
    static int lcm(int a, int b) {
        return (a * b) / gcd(a, b);
    }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter two numbers: ");
        int a = sc.nextInt(), b = sc.nextInt();
 
        System.out.println("GCD: " + gcd(a, b));
        System.out.println("LCM: " + lcm(a, b));
    }
 }
 
 
 
8...>
 
import java.util.*;
 
class TemperatureConverter {
    static double celsiusToFahrenheit(double c) {
        return (c * 9/5) + 32;
    }
 
    static double fahrenheitToCelsius(double f) {
        return (f - 32) * 5/9;
    }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter temperature: ");
        double temp = sc.nextDouble();
 
        System.out.print("Enter type (C/F): ");
        char type = sc.next().charAt(0);
 
        if (type == 'C' || type == 'c')
            System.out.println("Fahrenheit: " + celsiusToFahrenheit(temp));
        else
            System.out.println("Celsius: " + fahrenheitToCelsius(temp));
    }
 }
 
 
 
9...>
 
import java.util.*;
 
class Calculator {
    static int add(int a, int b) { return a + b; }
    static int subtract(int a, int b) { return a - b; }
    static int multiply(int a, int b) { return a * b; }
    static double divide(int a, int b) { return (double)a / b; }
 
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        System.out.print("Enter two numbers: ");
        int a = sc.nextInt(), b = sc.nextInt();
 
        System.out.print("Choose operation (+, -, *, /): ");
        char op = sc.next().charAt(0);
 
        switch (op) {
            case '+': System.out.println("Result: " + add(a, b)); break;
            case '-': System.out.println("Result: " + subtract(a, b)); break;
            case '*': System.out.println("Result: " + multiply(a, b)); break;
            case '/': 
                if (b != 0) System.out.println("Result: " + divide(a, b));
                else System.out.println("Division by zero not allowed");
                break;
            default: System.out.println("Invalid operation");
        }
    }
 }
 
 
 
 


 
 
 
 
 
 
